package com.urovo.sdk.emv;


import android.util.Log;

import com.urovo.i9000s.api.emv.AmexDRL;
import com.urovo.i9000s.api.emv.ContantPara;
import com.urovo.i9000s.api.emv.EmvNfcKernelApi;
import com.urovo.i9000s.api.emv.Funs;

import java.util.Hashtable;

/*
 * Select you need support kernel paramters to update , then test
 * */
public class TestEmv {




    private static void addCAPK_visa()
    {
        Hashtable<String, String> capk = new Hashtable();

        capk.put("Rid","A000000003");
        capk.put("Index","08");
        capk.put("Exponent","03");
        capk.put("Modulus","D9FD6ED75D51D0E30664BD157023EAA1FFA871E4DA65672B863D255E81E137A51DE4F72BCC9E44ACE12127F87E263D3AF9DD9CF35CA4A7B01E907000BA85D24954C2FCA3074825DDD4C0C8F186CB020F683E02F2DEAD3969133F06F7845166ACEB57CA0FC2603445469811D293BFEFBAFAB57631B3DD91E796BF850A25012F1AE38F05AA5C4D6D03B1DC2E568612785938BBC9B3CD3A910C1DA55A5A9218ACE0F7A21287752682F15832A678D6E1ED0B");
        capk.put("Checksum","00000000000000000000000000000000000000");
        EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,capk);

        capk.put("Rid","A000000003");
        capk.put("Index","53");
        capk.put("Exponent","03");
        capk.put("Modulus","BCD83721BE52CCCC4B6457321F22A7DC769F54EB8025913BE804D9EABBFA19B3D7C5D3CA658D768CAF57067EEC83C7E6E9F81D0586703ED9DDDADD20675D63424980B10EB364E81EB37DB40ED100344C928886FF4CCC37203EE6106D5B59D1AC102E2CD2D7AC17F4D96C398E5FD993ECB4FFDF79B17547FF9FA2AA8EEFD6CBDA124CBB17A0F8528146387135E226B005A474B9062FF264D2FF8EFA36814AA2950065B1B04C0A1AE9B2F69D4A4AA979D6CE95FEE9485ED0A03AEE9BD953E81CFD1EF6E814DFD3C2CE37AEFA38C1F9877371E91D6A5EB59FDEDF75D3325FA3CA66CDFBA0E57146CC789818FF06BE5FCC50ABD362AE4B80996D");
        capk.put("Checksum","00000000000000000000000000000000000000");
        EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,capk);

        capk.put("Rid","A000000003");
        capk.put("Index","09");
        capk.put("Exponent","03");
        capk.put("Modulus","9D912248DE0A4E39C1A7DDE3F6D2588992C1A4095AFBD1824D1BA74847F2BC4926D2EFD904B4B54954CD189A54C5D1179654F8F9B0D2AB5F0357EB642FEDA95D3912C6576945FAB897E7062CAA44A4AA06B8FE6E3DBA18AF6AE3738E30429EE9BE03427C9D64F695FA8CAB4BFE376853EA34AD1D76BFCAD15908C077FFE6DC5521ECEF5D278A96E26F57359FFAEDA19434B937F1AD999DC5C41EB11935B44C18100E857F431A4A5A6BB65114F174C2D7B59FDF237D6BB1DD0916E644D709DED56481477C75D95CDD68254615F7740EC07F330AC5D67BCD75BF23D28A140826C026DBDE971A37CD3EF9B8DF644AC385010501EFC6509D7A41");
        capk.put("Checksum","00000000000000000000000000000000000000");
        EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,capk);

        capk.put("Rid","A000000003");
        capk.put("Index","57");
        capk.put("Exponent","010001");
        capk.put("Modulus","942B7F2BA5EA307312B63DF77C5243618ACC2002BD7ECB74D821FE7BDC78BF28F49F74190AD9B23B9713B140FFEC1FB429D93F56BDC7ADE4AC075D75532C1E590B21874C7952F29B8C0F0C1CE3AEEDC8DA25343123E71DCF86C6998E15F756E3");
        capk.put("Checksum","429C954A3859CEF91295F663C963E582ED6EB253");
        EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,capk);

        capk.put("Rid","A000000003");
        capk.put("Index","92");
        capk.put("Exponent","03");
        capk.put("Modulus","996AF56F569187D09293C14810450ED8EE3357397B18A2458EFAA92DA3B6DF6514EC060195318FD43BE9B8F0CC669E3F844057CBDDF8BDA191BB64473BC8DC9A730DB8F6B4EDE3924186FFD9B8C7735789C23A36BA0B8AF65372EB57EA5D89E7D14E9C7B6B557460F10885DA16AC923F15AF3758F0F03EBD3C5C2C949CBA306DB44E6A2C076C5F67E281D7EF56785DC4D75945E491F01918800A9E2DC66F60080566CE0DAF8D17EAD46AD8E30A247C9F");
        capk.put("Checksum","429C954A3859CEF91295F663C963E582ED6EB253");
        EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,capk);

        capk.put("Rid","A000000003");
        capk.put("Index","94");
        capk.put("Exponent","03");
        capk.put("Modulus","ACD2B12302EE644F3F835ABD1FC7A6F62CCE48FFEC622AA8EF062BEF6FB8BA8BC68BBF6AB5870EED579BC3973E121303D34841A796D6DCBC41DBF9E52C4609795C0CCF7EE86FA1D5CB041071ED2C51D2202F63F1156C58A92D38BC60BDF424E1776E2BC9648078A03B36FB554375FC53D57C73F5160EA59F3AFC5398EC7B67758D65C9BFF7828B6B82D4BE124A416AB7301914311EA462C19F771F31B3B57336000DFF732D3B83DE07052D730354D297BEC72871DCCF0E193F171ABA27EE464C6A97690943D59BDABB2A27EB71CEEBDAFA1176046478FD62FEC452D5CA393296530AA3F41927ADFE434A2DF2AE3054F8840657A26E0FC617");
        capk.put("Checksum","C4A3C43CCF87327D136B804160E47D43B60E6E0F");
        EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,capk);

        capk.put("Rid","A000000003");
        capk.put("Index","96");
        capk.put("Exponent","03");
        capk.put("Modulus","B74586D19A207BE6627C5B0AAFBC44A2ECF5A2942D3A26CE19C4FFAEEE920521868922E893E7838225A3947A2614796FB2C0628CE8C11E3825A56D3B1BBAEF783A5C6A81F36F8625395126FA983C5216D3166D48ACDE8A431212FF763A7F79D9EDB7FED76B485DE45BEB829A3D4730848A366D3324C3027032FF8D16A1E44D8D");
        capk.put("Checksum","C63D0D8598AA7A5AA342FB80489C39A2A6E5A5F7");
        EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,capk);



    }


    public static void addCAPK_SM()
    {
        Hashtable<String, String> capk = new Hashtable();
        capk.put("Rid","A000000333");
        capk.put("Index","18");
        capk.put("ArithInd", "04");
        capk.put("Modulus","37710FEB7CC3617767874E85509C268E8F931D68773E93A89F39A4247DFE2D280FC5BC838353885B6DAD447C8F90116BD9D314047591989F67F319544D42A48B");
        EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,capk);
    }



    private static void addCAPK_master()
    {
        Hashtable<String, String> capk = new Hashtable();
        capk.put("Rid","A000000004");
        capk.put("Index","04");
        capk.put("Exponent","03");
        capk.put("Modulus","A6DA428387A502D7DDFB7A74D3F412BE762627197B25435B7A81716A700157DDD06F7CC99D6CA28C2470527E2C03616B9C59217357C2674F583B3BA5C7DCF2838692D023E3562420B4615C439CA97C44DC9A249CFCE7B3BFB22F68228C3AF13329AA4A613CF8DD853502373D62E49AB256D2BC17120E54AEDCED6D96A4287ACC5C04677D4A5A320DB8BEE2F775E5FEC5");
        capk.put("Checksum","00000000000000000000000000000000000000");
        EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,capk);

        capk.put("Rid","A000000004");
        capk.put("Index","05");
        capk.put("Exponent","03");
        capk.put("Modulus","B8048ABC30C90D976336543E3FD7091C8FE4800DF820ED55E7E94813ED00555B573FECA3D84AF6131A651D66CFF4284FB13B635EDD0EE40176D8BF04B7FD1C7BACF9AC7327DFAA8AA72D10DB3B8E70B2DDD811CB4196525EA386ACC33C0D9D4575916469C4E4F53E8E1C912CC618CB22DDE7C3568E90022E6BBA770202E4522A2DD623D180E215BD1D1507FE3DC90CA310D27B3EFCCD8F83DE3052CAD1E48938C68D095AAC91B5F37E28BB49EC7ED597");
        capk.put("Checksum","EBFA0D5D06D8CE702DA3EAE890701D45E274C845");
        EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,capk);

        capk.put("Index","06");
        capk.put("Exponent","03");
        capk.put("Modulus","CB26FC830B43785B2BCE37C81ED334622F9622F4C89AAE641046B2353433883F307FB7C974162DA72F7A4EC75D9D657336865B8D3023D3D645667625C9A07A6B7A137CF0C64198AE38FC238006FB2603F41F4F3BB9DA1347270F2F5D8C606E420958C5F7D50A71DE30142F70DE468889B5E3A08695B938A50FC980393A9CBCE44AD2D64F630BB33AD3F5F5FD495D31F37818C1D94071342E07F1BEC2194F6035BA5DED3936500EB82DFDA6E8AFB655B1EF3D0D7EBF86B66DD9F29F6B1D324FE8B26CE38AB2013DD13F611E7A594D675C4432350EA244CC34F3873CBA06592987A1D7E852ADC22EF5A2EE28132031E48F74037E3B34AB747F");
        capk.put("Checksum","F910A1504D5FFB793D94F3B500765E1ABCAD72D9");
        EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,capk);

        capk.put("Index","EF");
        capk.put("Exponent","03");
        capk.put("Modulus","A191CB87473F29349B5D60A88B3EAEE0973AA6F1A082F358D849FDDFF9C091F899EDA9792CAF09EF28F5D22404B88A2293EEBBC1949C43BEA4D60CFD879A1539544E09E0F09F60F065B2BF2A13ECC705F3D468B9D33AE77AD9D3F19CA40F23DCF5EB7C04DC8F69EBA565B1EBCB4686CD274785530FF6F6E9EE43AA43FDB02CE00DAEC15C7B8FD6A9B394BABA419D3F6DC85E16569BE8E76989688EFEA2DF22FF7D35C043338DEAA982A02B866DE5328519EBBCD6F03CDD686673847F84DB651AB86C28CF1462562C577B853564A290C8556D818531268D25CC98A4CC6A0BDFFFDA2DCCA3A94C998559E307FDDF915006D9A987B07DDAEB3B");
        capk.put("Checksum","00000000000000000000000000000000000000");
        EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,capk);

        capk.put("Index","F1");
        capk.put("Exponent","03");
        capk.put("Modulus","A0DCF4BDE19C3546B4B6F0414D174DDE294AABBB828C5A834D73AAE27C99B0B053A90278007239B6459FF0BBCD7B4B9C6C50AC02CE91368DA1BD21AAEADBC65347337D89B68F5C99A09D05BE02DD1F8C5BA20E2F13FB2A27C41D3F85CAD5CF6668E75851EC66EDBF98851FD4E42C44C1D59F5984703B27D5B9F21B8FA0D93279FBBF69E090642909C9EA27F898959541AA6757F5F624104F6E1D3A9532F2A6E51515AEAD1B43B3D7835088A2FAFA7BE7");
        capk.put("Checksum","D8E68DA167AB5A85D8C3D55ECB9B0517A1A5B4BB");
        EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,capk);

        capk.put("Index","F3");
        capk.put("Exponent","03");
        capk.put("Modulus","98F0C770F23864C2E766DF02D1E833DFF4FFE92D696E1642F0A88C5694C6479D16DB1537BFE29E4FDC6E6E8AFD1B0EB7EA0124723C333179BF19E93F10658B2F776E829E87DAEDA9C94A8B3382199A350C077977C97AFF08FD11310AC950A72C3CA5002EF513FCCC286E646E3C5387535D509514B3B326E1234F9CB48C36DDD44B416D23654034A66F403BA511C5EFA3");
        capk.put("Checksum","00000000000000000000000000000000000000");
        EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,capk);

        capk.put("Index","F8");
        capk.put("Exponent","03");
        capk.put("Modulus","A1F5E1C9BD8650BD43AB6EE56B891EF7459C0A24FA84F9127D1A6C79D4930F6DB1852E2510F18B61CD354DB83A356BD190B88AB8DF04284D02A4204A7B6CB7C5551977A9B36379CA3DE1A08E69F301C95CC1C20506959275F41723DD5D2925290579E5A95B0DF6323FC8E9273D6F849198C4996209166D9BFC973C361CC826E1");
        capk.put("Checksum","00000000000000000000000000000000000000");
        EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,capk);

        capk.put("Index","FA");
        capk.put("Exponent","03");
        capk.put("Modulus","A90FCD55AA2D5D9963E35ED0F440177699832F49C6BAB15CDAE5794BE93F934D4462D5D12762E48C38BA83D8445DEAA74195A301A102B2F114EADA0D180EE5E7A5C73E0C4E11F67A43DDAB5D55683B1474CC0627F44B8D3088A492FFAADAD4F42422D0E7013536C3C49AD3D0FAE96459B0F6B1B6056538A3D6D44640F94467B108867DEC40FAAECD740C00E2B7A8852D");
        capk.put("Checksum","00000000000000000000000000000000000000");
        EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,capk);

        capk.put("Index","FE");
        capk.put("Exponent","03");
        capk.put("Modulus","A653EAC1C0F786C8724F737F172997D63D1C3251C44402049B865BAE877D0F398CBFBE8A6035E24AFA086BEFDE9351E54B95708EE672F0968BCD50DCE40F783322B2ABA04EF137EF18ABF03C7DBC5813AEAEF3AA7797BA15DF7D5BA1CBAF7FD520B5A482D8D3FEE105077871113E23A49AF3926554A70FE10ED728CF793B62A1");
        capk.put("Checksum","00000000000000000000000000000000000000");
        EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,capk);
    }







    public static void addCAPK_jcb()
    {
        Hashtable<String, String> capk = new Hashtable();
        capk.put("Rid","A000000065");
        capk.put("Index","11");
        capk.put("Exponent","03");
        capk.put("Modulus","A2583AA40746E3A63C22478F576D1EFC5FB046135A6FC739E82B55035F71B09BEB566EDB9968DD649B94B6DEDC033899884E908C27BE1CD291E5436F762553297763DAA3B890D778C0F01E3344CECDFB3BA70D7E055B8C760D0179A403D6B55F2B3B083912B183ADB7927441BED3395A199EEFE0DEBD1F5FC3264033DA856F4A8B93916885BD42F9C1F456AAB8CFA83AC574833EB5E87BB9D4C006A4B5346BD9E17E139AB6552D9C58BC041195336485");
        capk.put("Checksum","00000000000000000000000000000000000000");
        EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,capk);

        capk.put("Index","12");
        capk.put("Exponent","03");
        capk.put("Modulus","ADF05CD4C5B490B087C3467B0F3043750438848461288BFEFD6198DD576DC3AD7A7CFA07DBA128C247A8EAB30DC3A30B02FCD7F1C8167965463626FEFF8AB1AA61A4B9AEF09EE12B009842A1ABA01ADB4A2B170668781EC92B60F605FD12B2B2A6F1FE734BE510F60DC5D189E401451B62B4E06851EC20EBFF4522AACC2E9CDC89BC5D8CDE5D633CFD77220FF6BBD4A9B441473CC3C6FEFC8D13E57C3DE97E1269FA19F655215B23563ED1D1860D8681");
        capk.put("Checksum","00000000000000000000000000000000000000");
        EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,capk);

        capk.put("Index","13");
        capk.put("Exponent","03");
        capk.put("Modulus","A3270868367E6E29349FC2743EE545AC53BD3029782488997650108524FD051E3B6EACA6A9A6C1441D28889A5F46413C8F62F3645AAEB30A1521EEF41FD4F3445BFA1AB29F9AC1A74D9A16B93293296CB09162B149BAC22F88AD8F322D684D6B49A12413FC1B6AC70EDEDB18EC1585519A89B50B3D03E14063C2CA58B7C2BA7FB22799A33BCDE6AFCBEB4A7D64911D08D18C47F9BD14A9FAD8805A15DE5A38945A97919B7AB88EFA11A88C0CD92C6EE7DC352AB0746ABF13585913C8A4E04464B77909C6BD94341A8976C4769EA6C0D30A60F4EE8FA19E767B170DF4FA80312DBA61DB645D5D1560873E2674E1F620083F30180BD96CA589");
        capk.put("Checksum","00000000000000000000000000000000000000");
        EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,capk);

        capk.put("Index","0F");
        capk.put("Exponent","03");
        capk.put("Modulus","9EFBADDE4071D4EF98C969EB32AF854864602E515D6501FDE576B310964A4F7C2CE842ABEFAFC5DC9E26A619BCF2614FE07375B9249BEFA09CFEE70232E75FFD647571280C76FFCA87511AD255B98A6B577591AF01D003BD6BF7E1FCE4DFD20D0D0297ED5ECA25DE261F37EFE9E175FB5F12D2503D8CFB060A63138511FE0E125CF3A643AFD7D66DCF9682BD246DDEA1");
        capk.put("Checksum","00000000000000000000000000000000000000");
        EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,capk);

        capk.put("Index","89");
        capk.put("Exponent","03");
        capk.put("Modulus","E5E195705CE61A0672B8367E7A51713927A04289EA308328FAD28071ECEAE889B3C4F29AC3BDE46772B00D42FD05F27228820F2693990F81B0F6928E240D957EC4484354CD5E5CA9092B444741A0394D3476651232474A9B87A961DA8DD96D90F036E9B3C52FB09766BDA4D6BC3BDADBC89122B74068F8FA04026C5FA8EF398BC3AB3992A87F6A785CC779BA99F170956623D67A18EB8324263D626BE85BFF77B8B981C0A3F7849C4F3D8E20542955D19128198547B47AE34DF67F28BE433F33");
        capk.put("Checksum","00000000000000000000000000000000000000");
        EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,capk);

        capk.put("Index","92");
        capk.put("Exponent","03");
        capk.put("Modulus","996AF56F569187D09293C14810450ED8EE3357397B18A2458EFAA92DA3B6DF6514EC060195318FD43BE9B8F0CC669E3F844057CBDDF8BDA191BB64473BC8DC9A730DB8F6B4EDE3924186FFD9B8C7735789C23A36BA0B8AF65372EB57EA5D89E7D14E9C7B6B557460F10885DA16AC923F15AF3758F0F03EBD3C5C2C949CBA306DB44E6A2C076C5F67E281D7EF56785DC4D75945E491F01918800A9E2DC66F60080566CE0DAF8D17EAD46AD8E30A247C9F");
        capk.put("Checksum","00000000000000000000000000000000000000");
        EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,capk);


    }

    public static void addCAPK_Amex()
    {
        Hashtable<String, String> capk = new Hashtable();
        capk.put("Rid","A000000025");
        capk.put("Index","C8");
        capk.put("Exponent","03");
        capk.put("Modulus","BF0CFCED708FB6B048E3014336EA24AA007D7967B8AA4E613D26D015C4FE7805D9DB131CED0D2A8ED504C3B5CCD48C33199E5A5BF644DA043B54DBF60276F05B1750FAB39098C7511D04BABC649482DDCF7CC42C8C435BAB8DD0EB1A620C31111D1AAAF9AF6571EEBD4CF5A08496D57E7ABDBB5180E0A42DA869AB95FB620EFF2641C3702AF3BE0B0C138EAEF202E21D");
        capk.put("Checksum","8E8DFF443D78CD91DE88821D70C98F0638E51E49");
        EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,capk);

        capk.put("Index","68");
        capk.put("Exponent","03");
        capk.put("Modulus","F4D198F2F0CF140E4D2D81B765EB4E24CED4C0834822769854D0E97E8066CBE465029B3F410E350F6296381A253BE71A4BBABBD516625DAE67D073D00113AAB9EA4DCECA29F3BB7A5D46C0D8B983E2482C2AD759735A5AB9AAAEFB31D3E718B8CA66C019ECA0A8BE312E243EB47A62300620BD51CF169A9194C17A42E51B34D83775A98E80B2D66F4F98084A448FE0507EA27C905AEE72B62A8A29438B6A4480FFF72F93280432A55FDD648AD93D82B9ECF01275C0914BAD8EB3AAF46B129F8749FEA425A2DCDD7E813A08FC0CA7841EDD49985CD8BC6D5D56F17AB9C67CEC50BA422440563ECCE21699E435C8682B6266393672C693D8B7");
        capk.put("Checksum","415E5FE9EC966C835FBB3E6F766A9B1A4B8674C3");
        EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,capk);

        capk.put("Index","C9");
        capk.put("Exponent","03");
        capk.put("Modulus","B362DB5733C15B8797B8ECEE55CB1A371F760E0BEDD3715BB270424FD4EA26062C38C3F4AAA3732A83D36EA8E9602F6683EECC6BAFF63DD2D49014BDE4D6D603CD744206B05B4BAD0C64C63AB3976B5C8CAAF8539549F5921C0B700D5B0F83C4E7E946068BAAAB5463544DB18C63801118F2182EFCC8A1E85E53C2A7AE839A5C6A3CABE73762B70D170AB64AFC6CA482944902611FB0061E09A67ACB77E493D998A0CCF93D81A4F6C0DC6B7DF22E62DB");
        capk.put("Checksum","8E8DFF443D78CD91DE88821D70C98F0638E51E49");
        EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,capk);


        capk.put("Index","CA");
        capk.put("Exponent","03");
        capk.put("Modulus","C23ECBD7119F479C2EE546C123A585D697A7D10B55C2D28BEF0D299C01DC65420A03FE5227ECDECB8025FBC86EEBC1935298C1753AB849936749719591758C315FA150400789BB14FADD6EAE2AD617DA38163199D1BAD5D3F8F6A7A20AEF420ADFE2404D30B219359C6A4952565CCCA6F11EC5BE564B49B0EA5BF5B3DC8C5C6401208D0029C3957A8C5922CBDE39D3A564C6DEBB6BD2AEF91FC27BB3D3892BEB9646DCE2E1EF8581EFFA712158AAEC541C0BBB4B3E279D7DA54E45A0ACC3570E712C9F7CDF985CFAFD382AE13A3B214A9E8E1E71AB1EA707895112ABC3A97D0FCB0AE2EE5C85492B6CFD54885CDD6337E895CC70FB3255E3");
        capk.put("Checksum","6BDA32B1AA171444C7E8F88075A74FBFE845765F");
        EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,capk);

        capk.put("Index","10");
        capk.put("Exponent","03");
        capk.put("Modulus","CF98DFEDB3D3727965EE7797723355E0751C81D2D3DF4D18EBAB9FB9D49F38C8C4A826B99DC9DEA3F01043D4BF22AC3550E2962A59639B1332156422F788B9C16D40135EFD1BA94147750575E636B6EBC618734C91C1D1BF3EDC2A46A43901668E0FFC136774080E888044F6A1E65DC9AAA8928DACBEB0DB55EA3514686C6A732CEF55EE27CF877F110652694A0E3484C855D882AE191674E25C296205BBB599455176FDD7BBC549F27BA5FE35336F7E29E68D783973199436633C67EE5A680F05160ED12D1665EC83D1997F10FD05BBDBF9433E8F797AEE3E9F02A34228ACE927ABE62B8B9281AD08D3DF5C7379685045D7BA5FCDE58637");
        capk.put("Checksum","8E8DFF443D78CD91DE88821D70C98F0638E51E49");
        EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,capk);

        capk.put("Index","67");
        capk.put("Exponent","03");
        capk.put("Modulus","C687ADCCF3D57D3360B174E471EDA693AA555DFDC6C8CD394C74BA25CCDF8EABFD1F1CEADFBE2280C9E81F7A058998DC22B7F22576FE84713D0BDD3D34CFCD12FCD0D26901BA74103D075C664DABCCAF57BF789494051C5EC303A2E1D784306D3DB3EB665CD360A558F40B7C05C919B2F0282FE1ED9BF6261AA814648FBC263B14214491DE426D242D65CD1FFF0FBE4D4DAFF5CFACB2ADC7131C9B147EE791956551076270696B75FD97373F1FD7804F");
        capk.put("Checksum","8E8DFF443D78CD91DE88821D70C98F0638E51E49");
        EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,capk);


    }


    public static void addCAPK_rupay()
    {
        Hashtable<String, String> capk = new Hashtable();
        capk.put("Rid","A000000524");
        capk.put("Index","05");
        capk.put("Exponent","03");
        capk.put("Modulus","C04E80180369898AAEF6EE7741EDED25239D765301614B5B41A008CA3009358D626D828BC5F1B1E04A2DC1367101266905D262003BE747FD231C9B0011F2F2B21BA8E4C0F4CA5E93ED9DBB2E92ABC450576A4EB59AD00DCA59C8BF3230E4B19D43452871C6215D837663310DF43CAEA1B9B08C1F500AF1B550F62E18D70EEE9E9475321BCD1799AB193E0BC849DACE892A0E6A1F42FE0786DB30345AE1A0E7E4C4B71640E03BFD2832C491A7D83F3B4EF4D388CDDBB748C2FD1D9D4A9BF52FC856CBA088D4B274846002C23CDA722C5CFF3B1F8218A1843B0426474BDC92F2F5E31FBF321CC17480AD069DF55381F2E601D5CBA7B871253F");
        capk.put("Checksum","00000000000000000000000000000000000000");
        EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,capk);

    }

    public static void addCAPK_NSICCS()
    {
        Hashtable<String, String> capk = new Hashtable();
        capk.put("Rid","A000000602");
        capk.put("Index","09");
        capk.put("Exponent","03");
        capk.put("Modulus","A517A338854E0856EE4AFDBF4BDA5DD3F9EB3895CBD8971B1E58A8EB167BF9935E0752DAEA7EAFB25E79D601EB201895A93F8B0A16D95A230366C05FEC55858C94D6097B2FB1EDDD2C6A3647DD0B71BC1DCDDC68B4E9ECC919FB544070952443159733471292993AB23E5B8C20E6A8526DF04A0B6E65E0F9D0378F71497E12FA83540B49FC05D0A86DC3D66FC4BB291A69B2EBB98D057C8F1EE7CB8E942FD05E9E4FAD0361BC184C13418C313C042C547DEF41310BA1850EF59CAF8CC7B14DAEE72FA4689C1047434024D565A3FA46EDCA3F53E236235268C893F268AA24AB2D20EB7AE06FF3123318041CB23E30839C58DFD4991D7C88CB");
        capk.put("Checksum","E78686DB119C1CBFAD2149EF3CBE9CF54AC6321E");
        EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,capk);

    }

    public static void addCAPK_Mada()
    {
        Hashtable<String, String> capk = new Hashtable();
        capk.put("Rid","A000000228");
        capk.put("Index","88");
        capk.put("Exponent","03");
        capk.put("Modulus","D6589C42073CD94C3C0008098DE209DA46AC0882AB5A0174AACA64A0E8BF2171098FF8A14470B2C0E76B792DBDA2D7AD27416E8D85190C151BF4DC19F51857A85387BA475D66682EAA954139BD1E7E37CF5F35F37DAAEC25B64722E9D68EDC266B4689F05F74D30370CC7C9F2A4B103B9FCDCD524519E9D80AF49E370116CB2287ABF001B5BCC9A34526EBAFD2E88DB752DFE24FE3DF1AFF71733D457B7899E7EB07DC8812DED19CA06D5BE14EC6A9D5");
        capk.put("Checksum","00000000000000000000000000000000000000");
        EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,capk);

        capk.put("Rid","A086000100");
        capk.put("Index","F1");
        capk.put("Exponent","03");
        capk.put("Modulus","B75259115B1EC87D15BD17A345863BF745E09CBB713F3C05C2DAF72F50250BCDB02330D1FC87B6EC5DFC96FD561F5AF704F251F2156514A3E641962C36125FF9C7FDB79B8CFF428B01E176A93A6E1470DAF5964A6AE1046A3CB286F1CDAFBC2512635911E5236E4A37B1767ACCA0D5D73B1DF7705BED41F09FAD3FE594625302BF2B9D70DD1E97DF6FE6B2D455ACEEB7E516976F07EB666DB38A767CFDF08B6FABC06BFBCB9DD20DC3F77AAC38C84DC7");
        capk.put("Checksum","00000000000000000000000000000000000000");
        EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,capk);

    }

    public static void addCAPK_UPI()
    {
        Hashtable<String, String> capk = new Hashtable();
        capk.put("Rid","A000000333");
        capk.put("Index","0A");
        capk.put("Exponent","03");
        capk.put("Modulus","B2AB1B6E9AC55A75ADFD5BBC34490E53C4C3381F34E60E7FAC21CC2B26DD34462B64A6FAE2495ED1DD383B8138BEA100FF9B7A111817E7B9869A9742B19E5C9DAC56F8B8827F11B05A08ECCF9E8D5E85B0F7CFA644EFF3E9B796688F38E006DEB21E101C01028903A06023AC5AAB8635F8E307A53AC742BDCE6A283F585F48EF");
        capk.put("Checksum","00000000000000000000000000000000000000");
        EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,capk);


        capk.put("Index","08");
        capk.put("Exponent","03");
        capk.put("Modulus","B61645EDFD5498FB246444037A0FA18C0F101EBD8EFA54573CE6E6A7FBF63ED21D66340852B0211CF5EEF6A1CD989F66AF21A8EB19DBD8DBC3706D135363A0D683D046304F5A836BC1BC632821AFE7A2F75DA3C50AC74C545A754562204137169663CFCC0B06E67E2109EBA41BC67FF20CC8AC80D7B6EE1A95465B3B2657533EA56D92D539E5064360EA4850FED2D1BF");
        capk.put("Checksum","00000000000000000000000000000000000000");
        EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,capk);

        capk.put("Index","09");
        capk.put("Exponent","03");
        capk.put("Modulus","EB374DFC5A96B71D2863875EDA2EAFB96B1B439D3ECE0B1826A2672EEEFA7990286776F8BD989A15141A75C384DFC14FEF9243AAB32707659BE9E4797A247C2F0B6D99372F384AF62FE23BC54BCDC57A9ACD1D5585C303F201EF4E8B806AFB809DB1A3DB1CD112AC884F164A67B99C7D6E5A8A6DF1D3CAE6D7ED3D5BE725B2DE4ADE23FA679BF4EB15A93D8A6E29C7FFA1A70DE2E54F593D908A3BF9EBBD760BBFDC8DB8B54497E6C5BE0E4A4DAC29E5");
        capk.put("Checksum","00000000000000000000000000000000000000");
        EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,capk);

        capk.put("Index","0B");
        capk.put("Exponent","03");
        capk.put("Modulus","CF9FDF46B356378E9AF311B0F981B21A1F22F250FB11F55C958709E3C7241918293483289EAE688A094C02C344E2999F315A72841F489E24B1BA0056CFAB3B479D0E826452375DCDBB67E97EC2AA66F4601D774FEAEF775ACCC621BFEB65FB0053FC5F392AA5E1D4C41A4DE9FFDFDF1327C4BB874F1F63A599EE3902FE95E729FD78D4234DC7E6CF1ABABAA3F6DB29B7F05D1D901D2E76A606A8CBFFFFECBD918FA2D278BDB43B0434F5D45134BE1C2781D157D501FF43E5F1C470967CD57CE53B64D82974C8275937C5D8502A1252A8A5D6088A259B694F98648D9AF2CB0EFD9D943C69F896D49FA39702162ACB5AF29B90BADE005BC157");
        capk.put("Checksum","00000000000000000000000000000000000000");
        EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,capk);

    }

    public static void addCAPK_Discover_Diner()
    {
        Hashtable<String, String> capk = new Hashtable();
        capk.put("Rid","A000000152");
        capk.put("Index","01");
        capk.put("Exponent","03");
        capk.put("Modulus","8D1727AB9DC852453193EA0810B110F2A3FD304BE258338AC2650FA2A040FA10301EA53DF18FD9F40F55C44FE0EE7C7223BC649B8F9328925707776CB86F3AC37D1B22300D0083B49350E09ABB4B62A96363B01E4180E158EADDD6878E85A6C9D56509BF68F0400AFFBC441DDCCDAF9163C4AACEB2C3E1EC13699D23CDA9D3AD");
        capk.put("Checksum","00000000000000000000000000000000000000");
        EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,capk);

        capk.put("Rid","A000000152");
        capk.put("Index","03");
        capk.put("Exponent","03");
        capk.put("Modulus","BF321241BDBF3585FFF2ACB89772EBD18F2C872159EAA4BC179FB03A1B850A1A758FA2C6849F48D4C4FF47E02A575FC13E8EB77AC37135030C5600369B5567D3A7AAF02015115E987E6BE566B4B4CC03A4E2B16CD9051667C2CD0EEF4D76D27A6F745E8BBEB45498ED8C30E2616DB4DBDA4BAF8D71990CDC22A8A387ACB21DD88E2CC27962B31FBD786BBB55F9E0B041");
        capk.put("Checksum","00000000000000000000000000000000000000");
        EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,capk);

        capk.put("Rid","A000000152");
        capk.put("Index","04");
        capk.put("Exponent","03");
        capk.put("Modulus","8EEEC0D6D3857FD558285E49B623B109E6774E06E9476FE1B2FB273685B5A235E955810ADDB5CDCC2CB6E1A97A07089D7FDE0A548BDC622145CA2DE3C73D6B14F284B3DC1FA056FC0FB2818BCD7C852F0C97963169F01483CE1A63F0BF899D412AB67C5BBDC8B4F6FB9ABB57E95125363DBD8F5EBAA9B74ADB93202050341833DEE8E38D28BD175C83A6EA720C262682BEABEA8E955FE67BD9C2EFF7CB9A9F45DD5BDA4A1EEFB148BC44FFF68D9329FD");
        capk.put("Checksum","00000000000000000000000000000000000000");
        EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,capk);

        capk.put("Rid","A000000152");
        capk.put("Index","05");
        capk.put("Exponent","03");
        capk.put("Modulus","E1200E9F4428EB71A526D6BB44C957F18F27B20BACE978061CCEF23532DBEBFAF654A149701C14E6A2A7C2ECAC4C92135BE3E9258331DDB0967C3D1D375B996F25B77811CCCC06A153B4CE6990A51A0258EA8437EDBEB701CB1F335993E3F48458BC1194BAD29BF683D5F3ECB984E31B7B9D2F6D947B39DEDE0279EE45B47F2F3D4EEEF93F9261F8F5A571AFBFB569C150370A78F6683D687CB677777B2E7ABEFCFC8F5F93501736997E8310EE0FD87AFAC5DA772BA277F88B44459FCA563555017CD0D66771437F8B6608AA1A665F88D846403E4C41AFEEDB9729C2B2511CFE228B50C1B152B2A60BBF61D8913E086210023A3AA499E423");
        capk.put("Checksum","00000000000000000000000000000000000000");
        EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,capk);

        capk.put("Rid","A000000152");
        capk.put("Index","5A");
        capk.put("Exponent","03");
        capk.put("Modulus","EDD8252468A705614B4D07DE3211B30031AEDB6D33A4315F2CFF7C97DB918993C2DC02E79E2FF8A2683D5BBD0F614BC9AB360A448283EF8B9CF6731D71D6BE939B7C5D0B0452D660CF24C21C47CAC8E26948C8EED8E3D00C016828D642816E658DC2CFC61E7E7D7740633BEFE34107C1FB55DEA7FAAEA2B25E85BED948893D07");
        capk.put("Checksum","00000000000000000000000000000000000000");
        EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,capk);

        capk.put("Rid","A000000152");
        capk.put("Index","5B");
        capk.put("Exponent","03");
        capk.put("Modulus","D3F45D065D4D900F68B2129AFA38F549AB9AE4619E5545814E468F382049A0B9776620DA60D62537F0705A2C926DBEAD4CA7CB43F0F0DD809584E9F7EFBDA3778747BC9E25C5606526FAB5E491646D4DD28278691C25956C8FED5E452F2442E25EDC6B0C1AA4B2E9EC4AD9B25A1B836295B823EDDC5EB6E1E0A3F41B28DB8C3B7E3E9B5979CD7E079EF024095A1D19DD");
        capk.put("Checksum","00000000000000000000000000000000000000");
        EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,capk);

        capk.put("Rid","A000000152");
        capk.put("Index","5C");
        capk.put("Exponent","03");
        capk.put("Modulus","833F275FCF5CA4CB6F1BF880E54DCFEB721A316692CAFEB28B698CAECAFA2B2D2AD8517B1EFB59DDEFC39F9C3B33DDEE40E7A63C03E90A4DD261BC0F28B42EA6E7A1F307178E2D63FA1649155C3A5F926B4C7D7C258BCA98EF90C7F4117C205E8E32C45D10E3D494059D2F2933891B979CE4A831B301B0550CDAE9B67064B31D8B481B85A5B046BE8FFA7BDB58DC0D7032525297F26FF619AF7F15BCEC0C92BCDCBC4FB207D115AA65CD04C1CF982191");
        capk.put("Checksum","00000000000000000000000000000000000000");
        EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,capk);

        capk.put("Rid","A000000152");
        capk.put("Index","5D");
        capk.put("Exponent","03");
        capk.put("Modulus","AD938EA9888E5155F8CD272749172B3A8C504C17460EFA0BED7CBC5FD32C4A80FD810312281B5A35562800CDC325358A9639C501A537B7AE43DF263E6D232B811ACDB6DDE979D55D6C911173483993A423A0A5B1E1A70237885A241B8EEBB5571E2D32B41F9CC5514DF83F0D69270E109AF1422F985A52CCE04F3DF269B795155A68AD2D6B660DDCD759F0A5DA7B64104D22C2771ECE7A5FFD40C774E441379D1132FAF04CDF55B9504C6DCE9F61776D81C7C45F19B9EFB3749AC7D486A5AD2E781FA9D082FB2677665B99FA5F1553135A1FD2A2A9FBF625CA84A7D736521431178F13100A2516F9A43CE095B032B886C7A6AB126E203BE7");
        capk.put("Checksum","00000000000000000000000000000000000000");
        EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,capk);

    }


    public static void addNSICCS_AID_Paramters()
    {
        Hashtable<String, String> data = new Hashtable<String, String>();
        data.put("CardType", "IcCard");
        data.put("aid", "A0000006021010");
        data.put("appVersion", "0100");
        data.put("terminalFloorLimit", "00000000");
        //data.put("terminalFloorLimit", Funs.DecNumStrToHexNumStr("000000010000"));
        //data.put("contactTACDefault", "D84000A800");
        data.put("contactTACDefault", "0000000000");
        data.put("contactTACDenial", "0000000000");
        data.put("contactTACOnline", "DC4004F800");
        data.put("defaultDDOL", "9F3704");
        data.put("AcquirerIdentifier", "112233");  // 9f01
        data.put("defaultTDOL","9F0206");
        data.put("ThresholdValue", "000000002000");
        data.put("TargetPercentage", "00");
        data.put("MaxTargetPercentage", "00");
        data.put("AppSelIndicator","00");//default 00 -part match 01 -full match
        data.put("TerminalAppPriority","00");//TerminalCapabilities
        data.put("TerminalCapabilities", "E0C0B0");
        data.put("terminalCountryCode", "0360");
        EmvNfcKernelApi.getInstance().updateAID(ContantPara.Operation.ADD, data);
    }

    public static void addEMV_AID_Paramters()
    {
        Hashtable<String, String> data = new Hashtable<String, String>();
        data.put("CardType", "IcCard");
        data.put("aid", "A0000000041010");
        data.put("appVersion", "0002");
        data.put("terminalFloorLimit", "00000000");
        //data.put("terminalFloorLimit", Funs.DecNumStrToHexNumStr("000000010000"));
        //data.put("contactTACDefault", "D84000A800");
        data.put("contactTACDefault", "0000000000");
        data.put("contactTACDenial", "0000000000");
        data.put("contactTACOnline", "DC4004F800");
        data.put("defaultDDOL", "9F3704");
        data.put("AcquirerIdentifier", "112233");  // 9f01
        data.put("defaultTDOL","9F0206");
        data.put("ThresholdValue", "000000002000");
        data.put("TargetPercentage", "00");
        data.put("MaxTargetPercentage", "00");
        data.put("AppSelIndicator","00");//default 00 -part match 01 -full match
        data.put("TerminalAppPriority","00");//TerminalCapabilities
        data.put("TerminalCapabilities", "E0F8C8");

        //data.put("terminalCountryCode", "0356");

        EmvNfcKernelApi.getInstance().updateAID(ContantPara.Operation.ADD,data);//master

        data.put("aid", "A0000000043060");//Maestro
        EmvNfcKernelApi.getInstance().updateAID(ContantPara.Operation.ADD,data);

        data.put("aid", "A00000002501"); //amex
        EmvNfcKernelApi.getInstance().updateAID(ContantPara.Operation.ADD,data);

        data.put("terminalFloorLimit", "000003E0");
        data.put("aid", "A0000000651010");  //jcb
        EmvNfcKernelApi.getInstance().updateAID(ContantPara.Operation.ADD,data);

        data.put("terminalFloorLimit", "00000000");
        data.put("aid", "A0000000046000");  //Cirrus
        EmvNfcKernelApi.getInstance().updateAID(ContantPara.Operation.ADD,data);

        data.put("aid", "A0000001523010");  // Diners Club/Discover 
        EmvNfcKernelApi.getInstance().updateAID(ContantPara.Operation.ADD,data);

        data.put("aid", "A0000006581010");  // Mir
        EmvNfcKernelApi.getInstance().updateAID(ContantPara.Operation.ADD,data);

        data.put("aid", "A0860001000001");//humo card
        EmvNfcKernelApi.getInstance().updateAID(ContantPara.Operation.ADD,data);

        data.put("aid", "A0000001523010");  // Diners Club/Discover
        EmvNfcKernelApi.getInstance().updateAID(ContantPara.Operation.ADD,data);

        data.put("aid", "A0000000031010");//visa
        EmvNfcKernelApi.getInstance().updateAID(ContantPara.Operation.ADD,data);

        data.put("aid", "A0000000032010");
        EmvNfcKernelApi.getInstance().updateAID(ContantPara.Operation.ADD,data);

        data.put("aid","A0000005241010");//
        EmvNfcKernelApi.getInstance().updateAID(ContantPara.Operation.ADD,data);

        data.put("aid","A000000054480001");//TBD citizen
        EmvNfcKernelApi.getInstance().updateAID(ContantPara.Operation.ADD,data);

        data.put("aid", "A0000006351010");//BancNet 菲律宾
        EmvNfcKernelApi.getInstance().updateAID(ContantPara.Operation.ADD, data);

        data.put("terminalCountryCode", "0682");
        data.put("aid", "A0000002281010"); //Mada
        EmvNfcKernelApi.getInstance().updateAID(ContantPara.Operation.ADD,data);

        data.put("terminalCountryCode", "0682");
        data.put("aid", "A0000002282010"); //mada
        EmvNfcKernelApi.getInstance().updateAID(ContantPara.Operation.ADD,data);


    }







    public static void initEMV_AID_CAPK()
    {

        addCAPK_rupay();
        addCAPK_visa();
        addCAPK_master();
        addCAPK_jcb();
        addCAPK_Mada();
        addCAPK_Amex();
        addCAPK_Discover_Diner();
        addCAPK_UPI();
        addCAPK_SM();
        addCAPK_NSICCS();
        addEMV_AID_Paramters();
        addNSICCS_AID_Paramters();
        my_testUPI();


    }





    public static void init_HUMOCARD_AID()
    {
        boolean bret;
        Hashtable<String, String> aidData = new Hashtable<String, String>();
        aidData.put("CardType", "MasterCard");
        aidData.put("ApplicationIdentifier", "A0860001000001");//9F06
        aidData.put("ApplicationVersionNumber", "0002");//9F09
        aidData.put("CVMCapabilityPerCVMRequired", "60");//DF8118
        aidData.put("DefaultUDOL", "9F6A04");//DF811A
        aidData.put("ReaderContactlessFloorLimit", "000000000000");//DF8123 000000000000 00003A98
        aidData.put("NoOnDeviceCVM", "000050000000");//DF8124 //000000200000 = 2000
        aidData.put("OnDeviceCVM", "000050000000");
        aidData.put("ReaderCVMRequiredLimit", "000000030000");// DF8126
        aidData.put("TerminalActionCodesOnLine", "FC50BCF800");//DF8122 WAS F45084800C
        aidData.put("TerminalActionCodesDenial", "0000000000");//DF8121
        aidData.put("TerminalActionCodesDefault", "FC50BC8000");//DF8120 WAS F45084800C
        aidData.put("TerminalRiskManagement", "6C7A000000000000");//9F1D
        aidData.put("CardDataInputCapability", "60"); // DF8117
        aidData.put("CVMCapabilityPerCVMRequired", "60");//DF8118
        aidData.put("CVMCapabilityNoCVMRequired", "08");//DF8119

        aidData.put("MagStripeCVMCapabilityCVMRequired", "10");// DF811E = "10";
        aidData.put("SecurityCapability", "08");//DF811F
        aidData.put("MagStripeCVMCapabilityPerNoCVMRequired", "00");// DF812C = "00";
        aidData.put("KernelConfiguration", "20");
        bret = EmvNfcKernelApi.getInstance().updateAID(ContantPara.Operation.ADD,aidData);
        Log.d("applog", "HUMOCARD:"+ bret);

    }



    public static void init_CARNET_AID_CAPK()
    {

        Hashtable<String, String> aidData = new Hashtable<String, String>();
        boolean bret;
        aidData.put("CardType", "PureCard");
        aidData.put("ApplicationIdentifier", "A0000007241010");//9F06
        aidData.put("TransactionLimit", "000000040000");//9F92810D
        aidData.put("FloorLimit", "000000000000");//9F92810F   //000000001200
        aidData.put("CvmRequiredLimit", "000000025000");//9F92810E
        aidData.put("LimitSwitch", "FE00");//9F92810A
        aidData.put("EmvTerminalFloorLimit", "00000000");//9F1B
        aidData.put("ApplicationVersion", "0001");//9f09
        aidData.put("TerminalActionCodesOnLine", "DC4004F800");//DF8122
        aidData.put("TerminalActionCodesDenial", "0010000000");//DF8121
        aidData.put("TerminalActionCodesDefault", "DC4000A800");//DF8120
        aidData.put("ContactlessApplicationCapabilities","36006043F9");
        aidData.put("ContactlessImplementationOptions","D7");
        aidData.put("MandatoryTagObjectList", "");
        aidData.put("AdditionalTagObjectList", "9F199F249F259F6E");
        aidData.put("AuthenticationTransactionDataTagObjectList", "");
        aidData.put("ThresholdValue", "000000002000");
        aidData.put("TargetPercentage", "00");
        aidData.put("MaxTargetPercentage", "00");
        aidData.put("DefaultDDOL","9F3704");

        bret = EmvNfcKernelApi.getInstance().updateAID(ContantPara.Operation.ADD,aidData);
        Log.d("applog", "CARNET Card updateAID1 "+ bret);

        aidData.put("ApplicationIdentifier", "A0000007242010");//9F06
        bret = EmvNfcKernelApi.getInstance().updateAID(ContantPara.Operation.ADD,aidData);
        Log.d("applog", "CARNET Card updateAID2 "+ bret);

        //----------------------PURE CARNET CAPK-------------------------------------
        Hashtable<String, String> data = new Hashtable<String, String>();
        data.put("Rid", "A000000724");//pure
        data.put("Index", "C1");
        data.put("Exponent", "03");
        data.put("Modulus","C71B645381635A8887E4FF56C866EA5F6E4BBE1C1CA0A520EB1DFB94150B50EA36688593F7F6F5189E747F22454CA6421EE83B334F39C99F598053194AE5B155CD8DB5FE9B3A86DE5F4162A273BDB8FD1A0314DDD315665B3DAD51F24FDFDAA66FF49B3081906CDC1C5AF7AFE7C4D0F0212250C5C6FA4159B2C937B3ED00B5E5524796F06CF79CE191FFDC0A6E6D7004CAFDCA1B8BDAF2DF32DB86DE45CD7FB477607419E9C12E29BADCA9FB7011DAFF");
        bret = EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,data);
        data.put("Index", "C2");
        data.put("Exponent", "03");
        data.put("Modulus","91E3215B117D300196F5A169F6511B63696991EAA6E2A6243C60E511A5CACF6CBBE02069AD4BF51037F89A02793DB5EC5FBAC5133AFF2A804EDA692BE6B6973907597D7E8B5847C498FBFCE711C5C2513370172426D43E88C1C9DDA11EC292F1FD3BCED0175E729661952A9AE7053F7DEE34ED39C630747ED3ED2A5ADA6ED5B81505697B2189623CFA242EC0DD6DEC01FD5831F443625C57976E95CCB4C7B3616DBB914BB6E935498CB1C54DFA3E8DCDB65BD5004762A8B7B6F88FE42BA0D42A790DA400A433407A3C6B9680837BB3A7529E54F13D2DB8D4006885700C3A48762BA39B2DC903962348E13E06894285A61E6BF03AC6F8C5DF");
        bret = EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,data);

        data.put("Index", "01");
        data.put("Exponent", "03");
        data.put("Modulus","AE0B89755F0509F111FDF7CDBABE0491A2E3A6A778A0FCB1744C5445749FE9407E5BDE86D402DC63BAE999BD6698132181BE2AAD0B96C9BEBA11A521B165165AA40057292F79F7329724D178AF18FC342BB8B58D1DD84FF44847056BF17F66307500228558D847678F9FA462E290F3DFD898F11381BA1710B94D42F160780D0F60A909516653978AE750568B3960071092633530C053FFB7097EFBF140AFCB196861A0DA94ECDAC8D336BE97B8E9AFB7");
        bret = EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,data);

        data.put("Index", "22");
        data.put("Exponent", "02");
        data.put("Modulus","AABB504E3B2CC61F243A6BE3BFB18B649E17ED625F1F8EE04704873AD60564B22A1B0258EA1D25BA7A19F53D59E5FC60E85CE1535F99774ACA94A636F430F0A0E7E98BD5738475C66EBFED3FF4220EF8347D203BF3640714D47132AAC8276145DBA29A055CFE1476CF8CB0AD90A4FFA76F58A8CD2433B802829CD7E49AB10123B83E8BA1E90D556607DF128F7342467230E30B8C347137CD106E212D30E9BD5867D7232B425B3F644F02D71FED7A3C3CCA67BE4C04BC711C4B32DF8F7194765C65566B2E27CB86DEB49EA0E2F65B80D54DBE923C421027413BAA3B93517EE08631D58D00098BA22372921321C40CC5115346587ED436A181");
        bret = EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,data);

        data.put("Index", "23");
        data.put("Exponent", "03");
        data.put("Modulus","EEEACE9FD905E43DD1EC43F471570F9255379E43813267F0C6C0363977C607E8E169B834A5072977ADA9BDF4D0F50748F3D2DED1F863A9A510C4D67BC923EB53E77711BB079B32F2837F1381F141B27B9361E67DDB5AEF107F05231042A9D003DA49338476FBA2E8FFD8D48621C830A6BAB87751570BEAB77AA501846E8F9EDE25EAD306C45AA21CEEB506E5256AADB01AAA0A5C5773DB7A75DBFB5D1EA30C89BFCB4937C0B1B6EDADFF12F9808F1E9129A39AC6996C7D9E551BD1AF924320D965BC0726AD9F9CE430415F1FDF9AC37C3DC0454452D73F0E0B1CBC8214522F5F");
        bret = EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,data);

        data.put("Index", "28");
        data.put("Exponent", "03");
        data.put("Modulus","C05B993401063615EF211036DD8154066BE4BBEC7E93A82E83C65E2CFD76E498A6DBF6135C816F606B9564A30D259A9FD5463AA78261223FBB4718EAD4A17347E11BE475BF0DDD9BE9315DCF585D58863A7BCA0E67440586DA098E33047C0DF6F6A1D1BD081BF283321DDF248FDFFA9FB749D0FDA47ADE2E7C0AAA76B146A00A5EBDA270C52832E8132FBC631EAC1120F02215829EB1D852B1969F1C1504A659AB6057C92AF92D981C8171B68E3300E3");
        bret = EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,data);
    }

    public static void init_Mada_Visa_AID_CAPK()
    {
        Hashtable<String, String> aidData = new Hashtable<String, String>();
        boolean bret;
        aidData.put("CardType", "VisaCard");
        aidData.put("ApplicationIdentifier", "A0000002282010");//9F06
        aidData.put("TerminalTransactionQualifiers", "75E04000");//9F66  //36004000    // 32004000 not support online PIN

        aidData.put("TransactionLimit", "000000500000");//9F92810D
        aidData.put("FloorLimit", "000000000000");//9F92810F  //000000040000
        aidData.put("CvmRequiredLimit", "000000050000");//9F92810E   //000000030000

        aidData.put("LimitSwitch", "FE00");//9F92810A
        aidData.put("EmvTerminalFloorLimit", "00000000");//9F1B
        aidData.put("TerminalCountryCode", "0682");//9f1A
        bret = EmvNfcKernelApi.getInstance().updateAID(ContantPara.Operation.ADD,aidData);
        Log.d("applog", "MadaCard updateAID "+ bret);


    }

    public static void init_Pure_Mada_AID_CAPK()
    {
        //----------------------------------------------------------
        //---------------PURECARD___MADA------------------------------
        //----------------------------------------------------------
        Hashtable<String, String> aidData = new Hashtable<String, String>();
        boolean bret;
        aidData.put("CardType", "PureCard");
        aidData.put("ApplicationIdentifier", "A0000002281010");//9F06
        aidData.put("Transactionlimit", "000000010000");//9F92810D
        aidData.put("FloorLimit", "000000000000");//9F92810F   //000000001200
        aidData.put("CvmRequiredLimit", "000000010000");//9F92810E
        aidData.put("LimitSwitch", "FE00");//9F92810A
        aidData.put("EmvTerminalFloorLimit", "00000000");//9F1B
        aidData.put("ApplicationVersion", "0001");//9f09
        aidData.put("TerminalActionCodesOnLine", "BC40BC8000");//DF8122
        aidData.put("TerminalActionCodesDenial", "0010000000");//DF8121
        aidData.put("TerminalActionCodesDefault", "BC40BC8000");//DF8120
        aidData.put("ContactlessApplicationCapabilities","3400400399");
        aidData.put("ContactlessImplementationOptions","08");
        aidData.put("MandatoryTagObjectList", "");
        aidData.put("AdditionalTagObjectList", "9F199F249F259F6E");
        aidData.put("AuthenticationTransactionDataTagObjectList", "");
        aidData.put("ThresholdValue", "000000002000");
        aidData.put("TargetPercentage", "00");
        aidData.put("MaxTargetPercentage", "00");
        aidData.put("DefaultDDOL","9F3704");
        aidData.put("TerminalCountryCode", "0682");//9f1A
        bret = EmvNfcKernelApi.getInstance().updateAID(ContantPara.Operation.ADD,aidData);
        Log.d("applog", "PureCard updateAID "+ bret);

        Hashtable<String, Object> aidData1 = new Hashtable<String, Object>();
        //-------------------------------------------------
        //-----------MADA-MasterCard----------------
        //-------------------------------------------------
        aidData1.put("CardType", "MasterCard");
        aidData1.put("ApplicationIdentifier", "A0000002281010");//9F06
        aidData1.put("ApplicationVersionNumber", "0002");//9F09
        aidData1.put("FloorLimit", "000000000000");//DF8123
        aidData1.put("NoOnDeviceCVM", "000000099999");//contactless transaction limit DF8124
        aidData1.put("OnDeviceCVM", "000000099999");// contactless transaction limit
        aidData1.put("ReaderCVMRequiredLimit", "000000050000");//DF8126
        aidData1.put("DefaultUDOL", "9F6A04");//DF811A
        aidData1.put("TerminalActionCodesOnLine", "0000000000");//DF8122 F45084800C
        aidData1.put("TerminalActionCodesDenial", "0000000000");//DF8121
        aidData1.put("TerminalActionCodesDefault", "0000000000");//DF8120
        aidData1.put("TerminalRiskManagement", "2C7A000000000000");//9F1D
        aidData.put("TerminalCountryCode", "0682");//9f1A
        aidData1.put("KernelConfiguration", "30");//  20 normal // 30 for RRP support
        aidData1.put("CardDataInputCapability", "60");//DF8117  // 60
        aidData1.put("CVMCapabilityPerCVMRequired", "60");//DF8118 //60 support online pin
        aidData1.put("CVMCapabilityNoCVMRequired", "08");//DF8119
        aidData1.put("MagStripeCVMCapabilityCVMRequired", "10");// DF811E = "10";
        aidData1.put("SecurityCapability", "00");//DF811F
        aidData1.put("MagStripeCVMCapabilityPerNoCVMRequired", "00");// DF812C = "00";

        bret = EmvNfcKernelApi.getInstance().updateAID(ContantPara.Operation.ADD,aidData);

//----------------------PURE MADA CAPK-------------------------------------
        Hashtable<String, String> data = new Hashtable<String, String>();
        data.put("Rid", "A000000228");//pure
        data.put("Index", "18");
        data.put("Exponent", "03");
        data.put("Modulus","A523924AFD826DAD39BC4532CB121C19A702D2B0D3F29CE79E2CBD0F847BC112A5FF61EF0E3913A6DF63A3E8017FC2B19F0E61304889A88E406DAC0FF82A423052E5387EF6C073D2B8C6004D2D4077C5179A78902CE4A8F361A85C6F46D56A75F374AF7AAD0F8409098AC1F388517184001AA316D05C842907BF0D62F8A05E083DBC8FED48FF84108D1C411C5540604408C42066E6B2ED465BC0DCBBB06383EE88C1CF0A7F694317C8B3A8EF1019059B");
        bret = EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,data);
        data.put("Index", "20");
        data.put("Exponent", "03");
        data.put("Modulus","EBA2E3FBE75D51C519B7A498CFE53F51519B292C1BBE0C78C14FBE38E3717DE0C0ECC04605879EF617B97ED1E8E989FCD2C7DDF61EE09E96F7EADA7D9F553426D6D6A8BE4DCF943D6C8F3627265520F757BBA16FF68749F3D796A0AAACA0ED0929BE112BF7CAB87BED4D9B5DD9B7A0CAC7F9CA513A6BFC03B4C20EFDC03E2B58D76E2ABF466665CB9D64AA412FBBF85259C480DA2F0896AB28FBB26022EFAE74CCDB9C36749E8D29AE4069A1298A0B07A7F72DFF8E6F442A2393DFF7E4E1F06F");
        bret = EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,data);

        data.put("Index", "21");
        data.put("Exponent", "03");
        data.put("Modulus","863B43586D710D2ECCF922644ACDD7015057A26BE7D6999A65D023DE94CD81A171E93C5BAB92C753767A4720C2ACFBF358387790CCD437806F9C1F19CF66FCF20BF42570FFE21ED742608F56C9CB0B4F277CF8EF3394C8BC595B314044197B7AAEAADBF1E44D763CDFE3DF368CBA6B09788F8EAEF9B47DEC02BEA131D58551430621D71AA5EEDE29FC1AC8CBE44CE92177E01EEBC080E94BEAD5FA0CAEF4B487");
        bret = EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,data);

        data.put("Index", "22");
        data.put("Exponent", "03");
        data.put("Modulus","9CC38384539AFFDB955ADF9FCF03A6A669B5F68D91DBE1562002D4617E75FF0BEF16731D8CAE5B6E690E00C0F106BD8EB127DAD03108D40576C95572B3C43E4A9641C11C4C5AED06643543CD02B6E3811FBC4F72956CA9D8641374CFB659263B8B22B5C5A3B624E99BF5CBFD34B99A069DA312B1F7C03CF8F4CFA91BB269DBD565073A9AFCB1DA7D839F13D43B57F924BB85E1BCCE28BE5A8EC03AA56FED231B13B920A3BA4227F53F927EC27F9DB20C32EB2AD8F9C0770EC97D930764E844C9");
        bret = EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,data);

        data.put("Index", "23");
        data.put("Exponent", "03");
        data.put("Modulus","EEEACE9FD905E43DD1EC43F471570F9255379E43813267F0C6C0363977C607E8E169B834A5072977ADA9BDF4D0F50748F3D2DED1F863A9A510C4D67BC923EB53E77711BB079B32F2837F1381F141B27B9361E67DDB5AEF107F05231042A9D003DA49338476FBA2E8FFD8D48621C830A6BAB87751570BEAB77AA501846E8F9EDE25EAD306C45AA21CEEB506E5256AADB01AAA0A5C5773DB7A75DBFB5D1EA30C89BFCB4937C0B1B6EDADFF12F9808F1E9129A39AC6996C7D9E551BD1AF924320D965BC0726AD9F9CE430415F1FDF9AC37C3DC0454452D73F0E0B1CBC8214522F5F");
        bret = EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,data);

        data.put("Index", "28");
        data.put("Exponent", "03");
        data.put("Modulus","C05B993401063615EF211036DD8154066BE4BBEC7E93A82E83C65E2CFD76E498A6DBF6135C816F606B9564A30D259A9FD5463AA78261223FBB4718EAD4A17347E11BE475BF0DDD9BE9315DCF585D58863A7BCA0E67440586DA098E33047C0DF6F6A1D1BD081BF283321DDF248FDFFA9FB749D0FDA47ADE2E7C0AAA76B146A00A5EBDA270C52832E8132FBC631EAC1120F02215829EB1D852B1969F1C1504A659AB6057C92AF92D981C8171B68E3300E3");
        bret = EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,data);

        data.put("Index", "29");
        data.put("Exponent", "03");
        data.put("Modulus","B6D73BF68564C88A1AEE8BA70A5F60CE495CA722E097DADEEBB83B28040B1BAD16DBC9AC3CD181BA89193638E600AF397D220F0339A8E792AA08C1878482ACC463B3B3A257AE8667CDBC1D6613CB9CBB612830FDA7F7BA689A148EFFF34476F6E0A70C819C10B3B6150909B58BF9403F5BB2E9790EE82C50C8D6FB267C726DC255AE97FABF5A357B2A0FBD1387168D83B25ECD912027B3868F072E025240CF780CC8E5839823727E5547FD1366A203F4F70FA82660B8401D4D2D06FD9A4036D14C53F6289D6FDC724E7D06F31ED93AC1B54083D9B9FCF09B135FDE9F4F6C1F0BA0142C3715E49015958C45315859DB12D942D75497FB51ED");
        bret = EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,data);

        data.put("Index", "88");
        data.put("Exponent", "03");
        data.put("Modulus","D6589C42073CD94C3C0008098DE209DA46AC0882AB5A0174AACA64A0E8BF2171098FF8A14470B2C0E76B792DBDA2D7AD27416E8D85190C151BF4DC19F51857A85387BA475D66682EAA954139BD1E7E37CF5F35F37DAAEC25B64722E9D68EDC266B4689F05F74D30370CC7C9F2A4B103B9FCDCD524519E9D80AF49E370116CB2287ABF001B5BCC9A34526EBAFD2E88DB752DFE24FE3DF1AFF71733D457B7899E7EB07DC8812DED19CA06D5BE14EC6A9D5");
        bret = EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,data);

    }


    public static void init_Rupay_AID_CAPK()
    {
        //-----------------------------------------------------
        //-----------------RUPAYCARD-------------------------
        //-----------------------------------------------------------
        Hashtable<String, String> aidData = new Hashtable<String, String>();
        boolean bret;
        aidData.put("CardType", "RupayCard");
        aidData.put("ApplicationIdentifier", "A0000005241010");//9F06
        aidData.put("TransactionLimit", "000099999999");//
        aidData.put("CvmRequiredLimit", "000000500000");//
        aidData.put("EmvTerminalFloorLimit",Funs.DecNumStrToHexNumStr("000000000000"));//9F1B
        aidData.put("ApplicationVersion", "0001");//9f09
        aidData.put("TerminalActionCodesOnLine", "0000000000");//DF8122
        aidData.put("TerminalActionCodesDenial", "0000000000");//DF8121
        aidData.put("TerminalActionCodesDefault", "0000000000");//DF8120
        aidData.put("ThresholdValue", "000000002000");
        aidData.put("TargetPercentage", "00");
        aidData.put("MaxTargetPercentage", "00");

        bret = EmvNfcKernelApi.getInstance().updateAID(ContantPara.Operation.ADD,aidData);
        Log.d("applog", "RupayCard updateAID "+ bret);

        aidData.put("ApplicationIdentifier", "A0000005241011");//9F06
        bret = EmvNfcKernelApi.getInstance().updateAID(ContantPara.Operation.ADD,aidData);
        Log.d("applog", "RupayCard updateAID "+ bret);


        //---------------------RUPAY CAPK-------------------------

        Hashtable<String, String> data = new Hashtable<String, String>();

        data.put("Rid", "A000000524");//Rupay
        data.put("Index","01");
        data.put("Exponent", "03");
        data.put("Modulus","ED2CBDC0E377CFE24640B819AAA606EF9B177F50A4C55917A53266CFB90DCA7C39D0C429207BFC29786945F912D59AA67508C62FA5B19E187D9FAEFB718084E14E7ADDBCC69211D4418CDE26FD10FCE8BFFFC46877768FED780615E74AA162EC823CF548FFEE5B263A9FE56FF42DE215A7112F9A1878DF81178AD1D69F0D47F5");
        bret = EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,data);

        data.put("Index","02");
        data.put("Exponent", "03");
        data.put("Modulus","B628CAB46EC37E24B0EFE78FD651BADC2545958B4D088FE8DA8CF7F04CF1916EF894386376608814C2F6F1662D964D0F7CA34C29E2FFEBF4AB4AB8E35BACCCF6D653EBB06AA1FCA3A877A6644B54894B9E1FAFBA7206F40BB4AF2EE7F9964F8259CE8A82DB00460B5820FA4CDF0D213E3710F5CA40838D57FC956B134760A0B1");
        bret = EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,data);

        data.put("Index", "03");
        data.put("Exponent", "03");
        data.put("Modulus","E703A908FFAE3730F82E550869A294C1FF1DA25F2B53D2C8BB18F770DAD505135D03D5EC8EE3926550051C3D4857F6FEDB882C2889E0B25F389F78741F2931A92D45D3A47E62810D3253653AB0AB3570C35DFD08D3167B6DB42ED28F765186F4287CDAF9D9BAD20BCE2C4ECFECDD218E50F1FCC718878882F3934A6FEB502CFCAD615A2B2E279A0868DDA9489DFA9CD9");
        bret = EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,data);

        data.put("Index", "04");
        data.put("Exponent", "03");
        data.put("Modulus","AC0019624FC0A72270C6885CC0B3C9140C351FCFE6F8145881A27750393453D3265F69E7658132D8D253EDF8991E2BA32B782D39ADE1FF1FC8F211F5DF51A0007C761AD9882587BD6A36AECD3ABBF944307AC97A2D905FAB489C3E1CCD76DE9EB93ECFAB2BB84F34E770119E356DC6372D8685DA8EB92FCAC7B53C0167100E4CDFB9830D1C45E787E44C9F6A42EC131A6A4CD66BBE4F93CA91FDF157C7B22FC7221A6348F0EDA6151302A80EF77D6CA5");
        bret = EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,data);

        data.put("Index", "05");
        data.put("Exponent", "03");
        data.put("Modulus","C04E80180369898AAEF6EE7741EDED25239D765301614B5B41A008CA3009358D626D828BC5F1B1E04A2DC1367101266905D262003BE747FD231C9B0011F2F2B21BA8E4C0F4CA5E93ED9DBB2E92ABC450576A4EB59AD00DCA59C8BF3230E4B19D43452871C6215D837663310DF43CAEA1B9B08C1F500AF1B550F62E18D70EEE9E9475321BCD1799AB193E0BC849DACE892A0E6A1F42FE0786DB30345AE1A0E7E4C4B71640E03BFD2832C491A7D83F3B4EF4D388CDDBB748C2FD1D9D4A9BF52FC856CBA088D4B274846002C23CDA722C5CFF3B1F8218A1843B0426474BDC92F2F5E31FBF321CC17480AD069DF55381F2E601D5CBA7B871253F");
        bret = EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,data);

        data.put("Index", "06");
        data.put("Exponent", "03");
        data.put("Modulus","9D8A75B36BCBDF250B87615A46F6EA35DE35226EEAB7B473D7DC0A28B5DF075C83B2775F23337E6CEE36CCFE3A6568C9C822D6DE81299565A829348E03D479B631BB18A2429A8590C597F446A3CEA3BE2E822106F43DFBB981EC0F1121919CB35F85DBA3355C5E7FF35F2B221FD65EDBEA41F23A7A109FBBC4A774A756D89B593B199E1E9DA9A99217D4BF31F67CDA8C4E1B81FA2A377C83B5D1CD6AF1F1880448CFF48D3A4ADBBC7FBD730061508A6EA8FDFC5BD66A2E94E33B83F81E0E56CF1C9473E4426EE435F9E80136760D8F4AD946805B03A67C55361582F5AD8F40404392FA4CB4F5C2BAF6E26857A1D60941E3D055ACD9AC0BEF");
        bret = EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,data);

        data.put("Index", "6A");
        data.put("Exponent", "03");
        data.put("Modulus","92795EAA4FE39EB30441FE952D5423778E02F86783B89DD7C587AE80A69F4D6DC55EAFB6604040D875C72002425EE529CE4EA26FD864BAD760160C2AA0C5AF92381894A5CBBC8AB3AF2641606C379B927A397CB1E9B9EA2EF8C0A9C0DDEBB81B0F8913A118F7044156EA7D23AF626EAF30C2C9ECE8534D3563EF5FE95DE76249");
        bret = EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,data);

        data.put("Index", "6B");
        data.put("Exponent", "03");
        data.put("Modulus","C9DFDB625ADA4B5E86049F85A0237627B59524F52BD499B4C5482C1EE012D61A1446E9383CC0B7EE2922D323A5ECDA12941EA8177CFA512DA6B5B7663A89B793B10D314CBB776EB96D0B1734EDE7E1591713915E9991B7B4E8A017A6901279AEBDD6136C9FE7E0C6CBF94C77FA606B629D00B1F890473905EB4DAD1AD93B29C2C1829A82F880B08986B9387611EE409D");
        bret = EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,data);

        data.put("Index", "6C");
        data.put("Exponent", "03");
        data.put("Modulus","C76259FF785ABD5FF613223C01F5BDA0F36F9342CF336B66C32D4B2CD5096E094D8E04DFA11A9B2E3BC78DA63B5C10148D8ED79EBA685D5D0EFE1C58B3F929D861B40FF3AAA3B527148D0C24921EE42DA048E01E38F6A3A49DFA67DD1CD5DD2091412DD36D3269FAF7D2E0FFB1A3E028969CB6BA5A9303A6FF65540F421B069A31B553398EE525EFA5C2CE26BCB81C5345018D5E3E9B7130F72F598C0EAA4682D4DA2F2204518780A8108F82DDC9CF1F");
        bret = EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,data);

        data.put("Index", "6D");
        data.put("Exponent", "03");
        data.put("Modulus","B747E8CB3615E8D26231355488F3C76C4746F7BB1C381E6C6E6ABF0A6D7CD93CFC6B2C310288CA8BE7EE1730DE621A59D1BB2D8C02C9148FA06E5D1F5E672EEFCE8AECBAD4A1C18F3175F1BEA1AEF539376592366B46A5044E32E59B3F35F50E85F843BA01851E5386B7EBE27367D3D483C5472D3020AF42116DDDA32341557EBABB043EBC6006B99A652009045BFA50C527028586E05942E1D594223B49FE8566931C31FBE8C903ABD4F283E1FAB03D758247EC4B728A85A9897601B753293263ADBD10BE988D0C52FE0091C2721DC02C5130FC7663E95739A70EE2F84DFD2E50C88A1A26587EF7CC047FCA2D03C2CF0CE4B524B4EC3F07");
        bret = EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,data);

    }


    public static void my_testUPI()
    {
        Hashtable<String, String> data = new Hashtable<String, String>();
        data.put("CardType", "IcCard");//Note: UPI contactless AID use the CardType is IcCard
        data.put("aid", "A000000333010101");
        data.put("appVersion", "0030");  // 008C
        data.put("terminalFloorLimit", "00000000");  // 100000 for test 20190929
        // data.put("terminalFloorLimit", Funs.DecNumStrToHexNumStr("000000010000"));
        data.put("contactTACDefault", "D84000A800");
        data.put("contactTACDenial", "0000000000");
        data.put("contactTACOnline", "DC4004F800");
        data.put("ThresholdValue", "000000000000");
        data.put("TargetPercentage", "99");
        data.put("MaxTargetPercentage", "99");
        data.put("AppSelIndicator","00");//default 00 -part match 01 -full match
        data.put("defaultDDOL", "9F3704");
        data.put("contactlessCVMRequiredLimit","000000030000");//for qPBOC
        data.put("contactlessTransactionLimit","090000000000");//for qPBOC
        data.put("contactlessFloorLimit","000000000000");//for qPBOC

        EmvNfcKernelApi.getInstance().updateAID(ContantPara.Operation.ADD,data);
        data.put("aid", "A000000333010102");
        EmvNfcKernelApi.getInstance().updateAID(ContantPara.Operation.ADD,data);
        data.put("aid", "A000000333010103");
        EmvNfcKernelApi.getInstance().updateAID(ContantPara.Operation.ADD,data);
        data.put("aid", "A000000333010108");
        EmvNfcKernelApi.getInstance().updateAID(ContantPara.Operation.ADD,data);
        data.put("aid", "A000000333010106");
        EmvNfcKernelApi.getInstance().updateAID(ContantPara.Operation.ADD,data);
        data.put("aid","A000000677010101");//TBD Thain
        EmvNfcKernelApi.getInstance().updateAID(ContantPara.Operation.ADD,data);
    }


    public static void init_Mir_AID_CAPK()
    {
        Hashtable<String, String> aidData = new Hashtable<String, String>();
        boolean bret;
        aidData.put("CardType", "MirCard");
        aidData.put("ApplicationIdentifier", "A0000006581010");//9F06
        aidData.put("TPMCapabilities","E800");//DF55
        aidData.put("TransactionRecoveryLimit","02");//DF56
        aidData.put("FloorLimit", "000000000000");//DF51
        aidData.put("NoOnDeviceCVM", "000000200000");//contactless transaction limit DF53
        aidData.put("OnDeviceCVM", "000000200000");// contactless transaction limit DF54
        aidData.put("ReaderCVMRequiredLimit", "000000030000");//DF52
        aidData.put("EmvTerminalFloorLimit", "00000000");//9F1B
        aidData.put("ApplicationVersion", "0001");//9f09
        aidData.put("TerminalActionCodesOnLine", "0000000000");
        aidData.put("TerminalActionCodesDenial", "0000000000");
        aidData.put("TerminalActionCodesDefault", "0000000000");
        aidData.put("ThresholdValue", "000000002000");
        aidData.put("TargetPercentage", "00");
        aidData.put("MaxTargetPercentage", "00");
        aidData.put("DataExchangeTagList","5782");



        bret = EmvNfcKernelApi.getInstance().updateAID(ContantPara.Operation.ADD,aidData);
        Log.d("applog", "MirCard updateAID "+ bret);

        aidData.put("ApplicationIdentifier", "A0000006582010");//9F06
        bret = EmvNfcKernelApi.getInstance().updateAID(ContantPara.Operation.ADD,aidData);
        Log.d("applog", "MirCard updateAID "+ bret);



        Hashtable<String, String> data = new Hashtable<String, String>();

        data.put("Rid", "A000000658");
        data.put("Index","31");
        data.put("Exponent", "010001");
        data.put("Modulus","DB2E9258EA946BE45EB4DD8CC5EBE9C09584C185625222372DE4050AB044C6EE754D374E75156B4FB263257B7D4DB9DB28B694380980A75CC727453B8016E06A1DB1CA5E1C3EBB3314A90025D37DFC9C88CA2FA0434F60713AD36F9D493EB4794E3F962C9EC14B6ACFDFC3C094EB1AE8042229A1387CF8640F19891303BE952380DBF820EDBD9C3F0898E146733B87EE9F48768211D8C28A6042E6549054CA6090E31F6B00F59A1914169E8D55C2C244FFE817FD9A3309112DD08E564F7C44EE0C3E9967620D942C956B0F3B934227587684802B751B07074F9FB063F231DCEEB89970185846D94FB14777AE9DE4344D");
        bret = EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,data);
        data.put("Index","32");
        data.put("Exponent", "010001");
        data.put("Modulus","D4D0A1A26221E03E4DB81461F47DB1937694833F973A3891CA63270142F5EC67318E2BA7B28339C78F170A21B993677669AA47194AAB894510A9378EF177F9E259087228C73830FF593EE5E4DD4BD4BBE950FA448761BADE6F5093C562B582B8E0D07E0307A63034A4CF69B4692B1039052197DBF88FCD1C77CFE865410593CE8D6DEB41FEF7A102374CC06D28D8BBAAB58B60A5D3D9D238CE3F2D9F3A2CA63E15ADD839638556F4CA8D59B39DABB114D3558083D8EB9C7F97DDF02B7D947F3CB167CB869CC4C547");
        bret = EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,data);
        data.put("Index","33");
        data.put("Exponent", "010001");
        data.put("Modulus","A8306E9E579AA071AE06DC87B8DC5E1F618B6F37DE4AFBBAB9A37E21738C5E19BC4A130689A11ED10DD6BEDDFDA6318E44AE2AEB5E5C62AFCFBF54717135EE0DC07155619D2074D66DBAA01ADFDA7638A661C8EA31BE6D0530BEBFBA9E4C748873C6575887761FA4E0E2C530F1D81EA3E2F0408B13FDCA97595D695E92B4526A86F033AE95C79872AFF7165CCF7A08FD");
        bret = EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,data);
        data.put("Index","D1");
        data.put("Exponent", "010001");
        data.put("Modulus","A3547415A7D237C09FC8AFF989FDA49E5B3275545026361C1A8DE477467F963D8F6F58A2F16E0885E4759CA58F72A5B5446CE3893155EFD978B2F0D8D1A7294AC7870D65B5CC78286F96237EFCBA02C6844A84DB79A01D225FF3BEAB3761AFC52AEDD57764483C980076D10E4C3485011DD93A970C57FC72A1CCA47C7D1B57E5D7798A180BF08455A4D602CFC3C881034B52D6DF2C3B1A8FEE7E6539EA35F6B5C123A822AA73FB6BDFD894AEB8381A62413EFB030F85DC45D71B66A322F1532A91C9AD8E4820AC18C544A623FC3E401D42498C1C9B88E5A6B7DA2D9E0BF7CB3F921242B5352302B95EE1344D79ECE49D");
        bret = EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,data);
        data.put("Index","D2");
        data.put("Exponent", "010001");
        data.put("Modulus","87DF1B2E39252EA14AA937D0EF2B35DC5C15E5A8DEEC1510BA0A2759500E86685FB765B102F440BEC872503ED7919AF72DEBA2F50B7CC6A4C4BC0548AF201C7274FAF248239D67FC72A123690300C9A064A5AB97B7F26CFA378A7A0BA3D551B74EA953496858A81EF6A44AA659C253551DD45174BB2A248FDBB66D614BA1C018F952A45C73E1149FEADC5B3E2561BEF8D4EE0150807EA1DDE9B3DDECD5428E3E79721ADDC660DD28B9CC3BF06066176405D822D659AC7BB9354AA3BA33DDEAD47DD34B4264E34581");
        bret = EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,data);
        data.put("Index","D3");
        data.put("Exponent", "010001");
        data.put("Modulus","9AF692FFA01A2CC61B97820AAFCBF0844B859726DE13AD4CAA8D3389A13728B588E1DD33373C8624D9D4BE468FA72F5EEEBB5FC904A386ACEF2A4D8A6F8AEFD69164CD56183C381BD7FCC2A16C6B12305729FFEA766699F54CA01D97761170C7A77B027028F12FB79FCB5E034983743A5CE9C2FE0753021BC9C8CA7555320D0CF4E1182F96BC3A1500C335199E701459");
        bret = EmvNfcKernelApi.getInstance().updateCAPK(ContantPara.Operation.ADD,data);

    }

    //OP_ADD=0,OP_DELETE=1,OP_MODIFY=2 ,OP_CLEAR=3
    public static void init_BlackList()
    {
        boolean bret;
        bret= EmvNfcKernelApi.getInstance().updateExceptFile(3,null);
        String ExcepTLV= Funs.New_TLV("5A", Funs.Append_F("6228482879119003874"))+"5F340100";
        bret= EmvNfcKernelApi.getInstance().updateExceptFile(0, ExcepTLV);
        Log.d("applog", "blacklist1 ret:"+bret);
        bret= EmvNfcKernelApi.getInstance().updateExceptFile(0, "5A0852364979362037965F340101");
        Log.d("applog", "blacklist2 ret:"+bret);

    }


    public static void init_Visa_DRL()
    {
        Hashtable<String, String> aidData = new Hashtable<String, String>();
        aidData.clear();
        aidData.put("CardType", "VisaCard");
        aidData.put("ProgramID", "40015601");//9F5A
        aidData.put("ApplicationIdentifier", "A0000000031010");//9F06
        aidData.put("TerminalTransactionQualifiers", "36204000");//9F66  //36004000    // 32004000 not support online PIN
        aidData.put("TransactionLimit", "999999999999");//9F92810D
        aidData.put("FloorLimit", "000000000000");//9F92810F  //000000040000
        aidData.put("CvmRequiredLimit", "000000500000");//9F92810E   //000000030000
        aidData.put("LimitSwitch", "FE00");//9F92810A
        aidData.put("EmvTerminalFloorLimit", "00000000");//9F1B
        boolean bret = EmvNfcKernelApi.getInstance().updateAID(ContantPara.Operation.ADD,aidData);


        aidData.put("ProgramID", "400156");
        aidData.put("TransactionLimit", "999999999999");//9F92810D
        aidData.put("FloorLimit", "000000000000");//9F92810F  //000000040000
        aidData.put("CvmRequiredLimit", "000000500000");//9F92810E   //000000030000
        bret = EmvNfcKernelApi.getInstance().updateAID(ContantPara.Operation.ADD,aidData);
    }

    public static void init_NfcAid_CAPK()
    {

        boolean bret;



        Hashtable<String, String> aidData = new Hashtable<String, String>();
        //-------------------------------------------------
        //------------MasterCard----------------
        //-------------------------------------------------
        aidData.clear();
        aidData.put("CardType", "MasterCard");
        aidData.put("ApplicationIdentifier", "A0000000041010");//9F06
        aidData.put("ApplicationVersionNumber", "0002");//9F09 or "ApplicationVersion"
        aidData.put("FloorLimit", "000000000000");//DF8123
        aidData.put("NoOnDeviceCVM", "999999999999");//contactless transaction limit DF8124
        aidData.put("OnDeviceCVM", "999999999999");// contactless transaction limit
        aidData.put("ReaderCVMRequiredLimit", "000000500000");//DF8126 or "CvmRequiredLimit"
        aidData.put("DefaultUDOL", "9F6A04");//DF811A
        aidData.put("TerminalActionCodesOnLine", "F45084800C");//DF8122 F45084800C
        aidData.put("TerminalActionCodesDenial", "0000000000");//DF8121
        aidData.put("TerminalActionCodesDefault", "F45084800C");//DF8120
        aidData.put("TerminalRiskManagement", "6C7A800000000000");//9F1D
        aidData.put("KernelConfiguration", "30");//  20 normal // 30 for RRP support
        aidData.put("CardDataInputCapability", "60");//DF8117  // 60
        aidData.put("CVMCapabilityPerCVMRequired", "60");//DF8118 //60 support online pin
        aidData.put("CVMCapabilityNoCVMRequired", "08");//DF8119
        aidData.put("MagStripeCVMCapabilityCVMRequired", "10");// DF811E = "10";
        aidData.put("SecurityCapability", "08");//DF811F
        aidData.put("MagStripeCVMCapabilityPerNoCVMRequired", "00");// DF812C = "00";
        //aidData.put("TerminalCountryCode", "0840");

        bret = EmvNfcKernelApi.getInstance().updateAID(ContantPara.Operation.ADD,aidData);  //MasterCard



        Log.d("applog", "updateAID MasterCard:"+ bret);

        aidData.put("CVMCapabilityPerCVMRequired", "20");
        aidData.put("TerminalActionCodesOnLine", "F45004800C");//DF8122
        aidData.put("TerminalActionCodesDenial", "0000800000");//DF8121
        aidData.put("TerminalActionCodesDefault", "F45004800C");//DF8120
        aidData.put("TerminalRiskManagement", "4C7A800000000000");//9F1D
        aidData.put("ApplicationIdentifier", "A0000000043060");//9F06
        aidData.put("KernelConfiguration", "B0");//Maestro card not support MS mode

        bret = EmvNfcKernelApi.getInstance().updateAID(ContantPara.Operation.ADD,aidData);
        Log.d("applog", "updateAID Maestro:"+ bret);


        //-------------------------------------------------------
        //--------------VISACARD-----------------------------
        // -------------------------------------------------
        aidData.clear();
        aidData.put("CardType", "VisaCard");
        aidData.put("ApplicationIdentifier", "A0000000031010");//9F06
        aidData.put("TerminalTransactionQualifiers", "36204000");//9F66  //36004000    // 32204000 not support online PIN

        aidData.put("TransactionLimit", "999999999999");//9F92810D
        aidData.put("FloorLimit", "000000000000");//9F92810F  //000000040000
        aidData.put("CvmRequiredLimit", "000000500000");//9F92810E   //000000030000

        aidData.put("LimitSwitch", "FE00");//9F92810A
        aidData.put("EmvTerminalFloorLimit", "00000000");//9F1B
        aidData.put("ProRestrictionDisable", "01");
        bret = EmvNfcKernelApi.getInstance().updateAID(ContantPara.Operation.ADD,aidData);
        Log.d("applog", "VisaCard updateAID1 "+ bret);

        aidData.put("ApplicationIdentifier", "A0000000032010");//9F06
        bret = EmvNfcKernelApi.getInstance().updateAID(ContantPara.Operation.ADD,aidData);
        Log.d("applog", "VisaCard updateAID2 "+ bret);
        aidData.put("ApplicationIdentifier", "A0000000033010");//9F06
        bret = EmvNfcKernelApi.getInstance().updateAID(ContantPara.Operation.ADD,aidData);
        Log.d("applog", "VisaCard updateAID3 "+ bret);

        aidData.put("ApplicationIdentifier", "A0000006351010");//BancNet 菲律宾
        bret =EmvNfcKernelApi.getInstance().updateAID(ContantPara.Operation.ADD, aidData);
        Log.d("applog", "Visa-BancNet updateAID4 "+ bret);
        //init_Visa_DRL();// need update it after default paramters


        //--------------------------------------------------------------
        //------------AMEXCARD--------------------------
        //------------------------------------------------------
        aidData.clear();
        aidData.put("CardType", "AmexCard");
        aidData.put("ApplicationIdentifier", "A00000002501");//9F06
        aidData.put("TerminalTransactionQualifiers", "DCE00003");//9F6E  //58E00003  // D8E00003 support contact // Enhanced Contactless Reader Capabilities
        aidData.put("TransactionLimit", "999999999999");//9F92810D
        aidData.put("FloorLimit", "000000000000");//9F92810F   //000000001200
        aidData.put("CvmRequiredLimit", "000000500000");//9F92810E
        aidData.put("LimitSwitch", "6800");//9F92810A
        aidData.put("EmvTerminalFloorLimit", "00000000");//9F1B
        aidData.put("ApplicationVersion", "0001");//9f09
        aidData.put("TerminalActionCodesOnLine", "DE00FC9800");//DF8122 //DE00FC9800
        aidData.put("TerminalActionCodesDenial", "0010000000");//DF8121 //0010000000
        aidData.put("TerminalActionCodesDefault", "DC50840000");//DF8120 //DC50FC9800
/*
        ////////////////Dynamic Limit Set default//////////////////// if not support DRL set ,you need not set
        String defaultDRL="";
        String DRLset="";
        AmexDRL amexDRL=new AmexDRL();
        amexDRL.setCVMLimit("000000001000");
        amexDRL.setFloorLimit("000000001200");
        amexDRL.setTransLimit("000000001500");
        amexDRL.setIndex("00");
        amexDRL.setDefault(true);
        defaultDRL+=amexDRL.formTLVFormat();
        aidData.put("DefaultDRL", defaultDRL);
        Log.d("applog", "DefaultDRL:"+defaultDRL);
        ///////////Dynamic Limit Set 11////////////
        amexDRL.setCVMLimit("000000000200");
        amexDRL.setFloorLimit("000000000000");
        amexDRL.setTransLimit("000000000300");
        amexDRL.setIndex("0B");
        amexDRL.setDefault(false);
        DRLset+=amexDRL.formTLVFormat();
        ///////////Dynamic Limit Set 6////////////
        amexDRL.setCVMLimit("000000000200");
        amexDRL.setFloorLimit("000000000000");
        amexDRL.setTransLimit("000000000700");
        amexDRL.setIndex("06");
        amexDRL.setDefault(false);
        DRLset+=amexDRL.formTLVFormat();
        aidData.put("DRLSet", DRLset);
        Log.d("applog", "DRLSet:"+DRLset);
        ////////////////////////////Dynamic Limit Set ///////////////////



 */
        bret = EmvNfcKernelApi.getInstance().updateAID(ContantPara.Operation.ADD,aidData);
        Log.d("applog", "AmexCard updateAID "+ bret);
        //----------------------------------------------------------
        //-----------------JCBCARD-------------------------------
        //-------------------------------------------------------
        aidData.clear();
        aidData.put("CardType", "JcbCard");
        aidData.put("ApplicationIdentifier", "A0000000651010");//9F06
        aidData.put("ConfigurationCombinationOptions", "7B00");//
        aidData.put("StaticTerminalInterchangeProfile", "708000");//

        aidData.put("TransactionLimit", "999999999999");//9F92810D
        aidData.put("FloorLimit", "000000000000");//9F92810F   //000000001200
        aidData.put("CvmRequiredLimit", "000000500000");//9F92810E

        aidData.put("EmvTerminalFloorLimit", "00004E20");//9F1B
        aidData.put("ApplicationVersion", "0200");//9f09
        aidData.put("TerminalActionCodesOnLine", "FC60ACF800");//DF8122
        aidData.put("TerminalActionCodesDenial", "0010000000");//DF8121
        aidData.put("TerminalActionCodesDefault", "FC6024A800");//DF8120

        aidData.put("ThresholdValue", "000000002000");
        aidData.put("TargetPercentage", "00");
        aidData.put("MaxTargetPercentage", "00");

        aidData.put("AcquirerIdentifier", "000000000010");
        aidData.put("MerchantCategoryCode", "7032");
        aidData.put("MerchantNameAndLocation", "5858204D45524348414E54205959204C4F434154494F4E");
        aidData.put("TerminalCapabilities", "E068C8");

        bret = EmvNfcKernelApi.getInstance().updateAID(ContantPara.Operation.ADD,aidData);
        Log.d("applog", "JcbCard updateAID "+ bret);




        //-------------------------------------------------
        //--------------DISCOVERCARD-----------------------
        //-------------------------------------------------
        aidData.clear();
        aidData.put("CardType", "DiscoverCard");
        aidData.put("ApplicationIdentifier", "A000000152301002");//9F06
        aidData.put("TerminalTransactionQualifiers", "3600C000");// TTQ
        aidData.put("TransactionLimit", "999999999999");//9F92810D
        aidData.put("FloorLimit", "000000000000");//9F92810F   //000000000000
        aidData.put("CvmRequiredLimit", "000000500000");//9F92810E
        aidData.put("EmvTerminalFloorLimit", "00000000");//9F1B
        aidData.put("ApplicationVersion", "0001");//9f09
        aidData.put("TerminalActionCodesOnLine", "0000000000");//DF8122 FC60ACF800
        aidData.put("TerminalActionCodesDenial", "0000000000");//DF8121 0010000000
        aidData.put("TerminalActionCodesDefault", "0000000000");//DF8120 FC6024A800

        bret = EmvNfcKernelApi.getInstance().updateAID(ContantPara.Operation.ADD,aidData);
        Log.d("applog", "DiscoverCard updateAID "+ bret);//A0000003241010
        aidData.put("ApplicationIdentifier", "A0000001523010");//9F06
        bret = EmvNfcKernelApi.getInstance().updateAID(ContantPara.Operation.ADD,aidData);


        aidData.put("ApplicationIdentifier", "A0000003241010");//9F06
        bret = EmvNfcKernelApi.getInstance().updateAID(ContantPara.Operation.ADD,aidData);
        Log.d("applog", "DinnerCard updateAID "+ bret);

        init_Mir_AID_CAPK();
        init_Pure_Mada_AID_CAPK();
        init_Mada_Visa_AID_CAPK();
        init_CARNET_AID_CAPK();
        init_HUMOCARD_AID();
        init_Rupay_AID_CAPK();


    }

    //don`t support online pin
    public void Nayax_Dangot_TestParamters()
    {
        boolean bret;

        EmvNfcKernelApi.getInstance().updateTerminalParamters(ContantPara.CardSlot.UNKNOWN,"9F4005F000F0A0019F1A0208409F3303E0B8C89F3501225F360102DF020101DF030101");//DF02---random trans select enable  DF03--Except file check enable DF04--Support SM


        Hashtable<String, String> aidData = new Hashtable<String, String>();
        //-------------------------------------------------
        //------------MasterCard----------------
        //-------------------------------------------------
        aidData.clear();
        aidData.put("CardType", "MasterCard");
        aidData.put("ApplicationIdentifier", "A0000000041010");//9F06
        aidData.put("ApplicationVersionNumber", "0002");//9F09
        aidData.put("FloorLimit", "000000000000");//DF8123
        aidData.put("NoOnDeviceCVM", "000000500000");//contactless transaction limit DF8124
        aidData.put("OnDeviceCVM", "000009999999");// contactless transaction limit
        aidData.put("ReaderCVMRequiredLimit", "000000050000");//DF8126
        aidData.put("DefaultUDOL", "9F6A04");//DF811A
        aidData.put("TerminalActionCodesOnLine", "F45080800C");//DF8122 F45084800C
        aidData.put("TerminalActionCodesDenial", "0000000000");//DF8121
        aidData.put("TerminalActionCodesDefault", "F45084800C");//DF8120
        aidData.put("TerminalRiskManagement", "0C3A800000000000");//9F1D
        aidData.put("KernelConfiguration", "30");//  20 normal // 30 for RRP support
        aidData.put("CardDataInputCapability", "60");//DF8117  // 60
        aidData.put("CVMCapabilityPerCVMRequired", "20");//DF8118 //60 support online pin
        aidData.put("CVMCapabilityNoCVMRequired", "08");//DF8119
        aidData.put("MagStripeCVMCapabilityCVMRequired", "10");// DF811E = "10";
        aidData.put("SecurityCapability", "08");//DF811F
        aidData.put("MagStripeCVMCapabilityPerNoCVMRequired", "00");// DF812C = "00";

        bret = EmvNfcKernelApi.getInstance().updateAID(ContantPara.Operation.ADD,aidData);  //MasterCard
        Log.d("applog", "updateAID MasterCard:"+ bret);


        aidData.put("ApplicationIdentifier", "A0000000043060");//9F06
        aidData.put("KernelConfiguration", "B0");//Maestro card not support MS mode

        bret = EmvNfcKernelApi.getInstance().updateAID(ContantPara.Operation.ADD,aidData);
        Log.d("applog", "updateAID Maestro:"+ bret);
        //-------------------------------------------------------
        //--------------VISACARD-----------------------------
        // -------------------------------------------------
        aidData.clear();
        aidData.put("CardType", "VisaCard");
        aidData.put("ApplicationIdentifier", "A0000000031010");//9F06
        aidData.put("TerminalTransactionQualifiers", "36204000");//9F66  //36004000    // 32004000 not support online PIN

        aidData.put("CvmRequiredLimit", "000000005000");
        aidData.put("FloorLimit", "000000002000");
        aidData.put("TransactionLimit", "000000010000");

        aidData.put("LimitSwitch", "FE00");//9F92810A
        aidData.put("EmvTerminalFloorLimit", "000007D0");//9F1B
        aidData.put("ProRestrictionDisable", "01");
        bret = EmvNfcKernelApi.getInstance().updateAID(ContantPara.Operation.ADD,aidData);
        Log.d("applog", "VisaCard updateAID1 "+ bret);

        aidData.put("ApplicationIdentifier", "A0000000032010");//9F06
        bret = EmvNfcKernelApi.getInstance().updateAID(ContantPara.Operation.ADD,aidData);
        Log.d("applog", "VisaCard updateAID2 "+ bret);
        aidData.put("ApplicationIdentifier", "A0000000033010");//9F06
        bret = EmvNfcKernelApi.getInstance().updateAID(ContantPara.Operation.ADD,aidData);
        Log.d("applog", "VisaCard updateAID3 "+ bret);

        //--------------------------------------------------------------
        //------------AMEXCARD--------------------------
        //------------------------------------------------------
        aidData.clear();
        aidData.put("CardType", "AmexCard");
        aidData.put("ApplicationIdentifier", "A00000002501");//9F06
        aidData.put("TerminalTransactionQualifiers", "D8A00000");//9F6E  //58E00003  // D8E00003 support contact // Enhanced Contactless Reader Capabilities
        aidData.put("TransactionLimit", "000000001500");//9F92810D
        aidData.put("FloorLimit", "000000001200");//9F92810F   //000000001200
        aidData.put("CvmRequiredLimit", "000000001000");
        aidData.put("EmvTerminalFloorLimit", "00000000");//9F1B

        aidData.put("TerminalActionCodesDefault", "DC50840000");
        aidData.put("TerminalActionCodesDenial", "0010000000");
        aidData.put("TerminalActionCodesOnLine", "DE00EC9800");


        aidData.put("ApplicationVersion", "0001");//9f09


        ////////////////Dynamic Limit Set default//////////////////// if not support DRL set ,you need not set
        String defaultDRL="";
        String DRLset="";
        AmexDRL amexDRL=new AmexDRL();
        amexDRL.setCVMLimit("000000001000");
        amexDRL.setFloorLimit("000000001200");
        amexDRL.setTransLimit("000000001500");
        amexDRL.setIndex("00");
        amexDRL.setDefault(true);
        defaultDRL+=amexDRL.formTLVFormat();
        aidData.put("DefaultDRL", defaultDRL);

        ///////////Dynamic Limit Set 11////////////
        amexDRL.setCVMLimit("000000000200");
        amexDRL.setFloorLimit("000000000100");
        amexDRL.setTransLimit("000000000300");
        amexDRL.setIndex("0B");
        amexDRL.setDefault(false);
        DRLset+=amexDRL.formTLVFormat();
        ///////////Dynamic Limit Set 6////////////
        amexDRL.setCVMLimit("000000000200");
        amexDRL.setFloorLimit("000000000400");
        amexDRL.setTransLimit("000000000700");
        amexDRL.setIndex("06");
        amexDRL.setDefault(false);
        DRLset+=amexDRL.formTLVFormat();
        aidData.put("DRLSet", DRLset);
        ////////////////////////////Dynamic Limit Set ///////////////////
        bret = EmvNfcKernelApi.getInstance().updateAID(ContantPara.Operation.ADD,aidData);
        Log.d("applog", "AmexCard updateAID "+ bret);


    }




}



